<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classquantit_1_1any__quantity" kind="class" language="C++" prot="public" final="yes">
    <compoundname>quantit::any_quantity</compoundname>
    <includes refid="cquantity_8h" local="no">cquantity.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classquantit_1_1any__quantity_1a2218d2f7177870aa9e6e2921a31cbe09" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classquantit_1_1vquantity" kindref="compound">vquantity</ref> &gt;</type>
        <definition>std::unique_ptr&lt;vquantity&gt; quantit::any_quantity::impl</definition>
        <argsstring></argsstring>
        <name>impl</name>
        <qualifiedname>quantit::any_quantity::impl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="42" column="17" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classquantit_1_1any__quantity_1ae8506bebe0e2fb8419cfbd371148c5a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>quantit::any_quantity::any_quantity</definition>
        <argsstring>(const vquantity &amp;other)</argsstring>
        <name>any_quantity</name>
        <qualifiedname>quantit::any_quantity::any_quantity</qualifiedname>
        <param>
          <type>const <ref refid="classquantit_1_1vquantity" kindref="compound">vquantity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="48" column="1" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1a1863cfdbac4bb1ae90a6ad97ddf8215b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>quantit::any_quantity::any_quantity</definition>
        <argsstring>(std::unique_ptr&lt; vquantity &gt; &amp;&amp;_impl)</argsstring>
        <name>any_quantity</name>
        <qualifiedname>quantit::any_quantity::any_quantity</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classquantit_1_1vquantity" kindref="compound">vquantity</ref> &gt; &amp;&amp;</type>
          <declname>_impl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="51" column="1" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1a0d55a33316ff6b8caf4ed91fcaa98496" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Groups</declname>
            <defname>Groups</defname>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt; 	              !std::disjunction_v&lt;std::is_same&lt;Groups, <ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_cref</ref>&gt;..., 	                                  std::is_same&lt;Groups, <ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_ref</ref>&gt;...,  	                                  std::is_same&lt;Groups, <ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref>&gt;...&gt;      	              and conserved::all_group_v&lt;Groups...&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>quantit::any_quantity::any_quantity</definition>
        <argsstring>(Groups... grps)</argsstring>
        <name>any_quantity</name>
        <qualifiedname>quantit::any_quantity::any_quantity</qualifiedname>
        <param>
          <type>Groups...</type>
          <declname>grps</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref> object. It compose the group element it receive. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Groups</parametername>
</parameternamelist>
<parameterdescription>
<para>types of the different group we&apos;re composing </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>std::enable_if_t&lt;groups::all_group_v&lt;Groups...&gt;&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>verify that the arguements all satisfy the required group interface. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grps</parametername>
</parameternamelist>
<parameterdescription>
<para>values used to initialized the group </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="68" column="1" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="68" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1a00bc0f329e8f9bb6c20a4736bd214400" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>quantit::any_quantity::any_quantity</definition>
        <argsstring>()</argsstring>
        <name>any_quantity</name>
        <qualifiedname>quantit::any_quantity::any_quantity</qualifiedname>
        <briefdescription>
<para>Construct a new <ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref> object, initialized with a representation of the trivial group. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1a767df070bdc539bc0849f1bf2501af3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>quantit::any_quantity::any_quantity</definition>
        <argsstring>(const any_quantity &amp;other)</argsstring>
        <name>any_quantity</name>
        <qualifiedname>quantit::any_quantity::any_quantity</qualifiedname>
        <param>
          <type>const <ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="82" column="1" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1a1d6a84eead603a1dba8f89d55a374da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>quantit::any_quantity::any_quantity</definition>
        <argsstring>(any_quantity &amp;&amp;)=default</argsstring>
        <name>any_quantity</name>
        <qualifiedname>quantit::any_quantity::any_quantity</qualifiedname>
        <param>
          <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1a41e86ea3afdd514bd530f293940100ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classquantit_1_1vquantity" kindref="compound">vquantity</ref> &amp;</type>
        <definition>vquantity &amp; quantit::any_quantity::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <qualifiedname>quantit::any_quantity::get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="90" column="11" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="288" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1a7bd0acf869c5f45532d1a683f696541b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classquantit_1_1vquantity" kindref="compound">vquantity</ref> &amp;</type>
        <definition>const vquantity &amp; quantit::any_quantity::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <qualifiedname>quantit::any_quantity::get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="91" column="17" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="289" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1ad0d315c7b2da8a1328e2b902835f22d4" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void quantit::any_quantity::swap</definition>
        <argsstring>(any_quantity &amp;other) noexcept</argsstring>
        <name>swap</name>
        <qualifiedname>quantit::any_quantity::swap</qualifiedname>
        <param>
          <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>swap function with reference to <ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref>. Always work. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="98" column="6" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="218" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1a90757051196169d5e2d10787de6ed9f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void quantit::any_quantity::swap</definition>
        <argsstring>(any_quantity_ref other)</argsstring>
        <name>swap</name>
        <qualifiedname>quantit::any_quantity::swap</qualifiedname>
        <param>
          <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_ref</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="100" column="6" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="245" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1aa8c093a2b1d5c34d94f3ab592ff7e13d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref></type>
        <definition>any_quantity quantit::any_quantity::neutral</definition>
        <argsstring>() const</argsstring>
        <name>neutral</name>
        <qualifiedname>quantit::any_quantity::neutral</qualifiedname>
        <briefdescription>
<para>generate the neutral element of the underlying gorup. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="107" column="14" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="191" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1a6b6c29d553dcf03438472ddc7b5a95b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_ref</ref></type>
        <definition>any_quantity_ref quantit::any_quantity::operator=</definition>
        <argsstring>(any_quantity_cref other)</argsstring>
        <name>operator=</name>
        <qualifiedname>quantit::any_quantity::operator=</qualifiedname>
        <param>
          <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_cref</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>assigment operators, copy the value into this. These assigment operator can change the underlying type of *this. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref>, any_quantity_ref or any_quantity_cref </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref>&amp; :reference to *this </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="115" column="18" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="262" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1a1c328cdd7adb6fb98dcf9055498a8f7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_ref</ref></type>
        <definition>any_quantity_ref quantit::any_quantity::operator=</definition>
        <argsstring>(any_quantity_ref other)</argsstring>
        <name>operator=</name>
        <qualifiedname>quantit::any_quantity::operator=</qualifiedname>
        <param>
          <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_ref</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="116" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1ae77d58e9bfa7a7647d66926e16c8904f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_ref</ref></type>
        <definition>any_quantity_ref quantit::any_quantity::operator=</definition>
        <argsstring>(const any_quantity &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>quantit::any_quantity::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="117" column="18" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="240" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1a09b8d708df66713eea0cb6906d7659e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_ref</ref></type>
        <definition>any_quantity_ref quantit::any_quantity::operator=</definition>
        <argsstring>(any_quantity &amp;&amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>quantit::any_quantity::operator=</qualifiedname>
        <param>
          <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="118" column="18" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="223" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1ae056980308dca3d6fda141061ce1e29e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>quantit::any_quantity::operator any_quantity_cref</definition>
        <argsstring>() const</argsstring>
        <name>operator any_quantity_cref</name>
        <qualifiedname>quantit::any_quantity::operator any_quantity_cref</qualifiedname>
        <briefdescription>
<para>implicit conversion to the reference to const type </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>any_quantity_cref: a reference to this constant object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="124" column="1" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="248" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1a890408ca918ea9cb0de2e36b5323d282" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>quantit::any_quantity::operator any_quantity_ref</definition>
        <argsstring>()</argsstring>
        <name>operator any_quantity_ref</name>
        <qualifiedname>quantit::any_quantity::operator any_quantity_ref</qualifiedname>
        <briefdescription>
<para>implicit conversion to the reference type </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>any_quantity_ref : a reference to this object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="130" column="1" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="249" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1a7443a3a827eaa958ac86bdc3c26c95e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>quantit::any_quantity::~any_quantity</definition>
        <argsstring>()</argsstring>
        <name>~any_quantity</name>
        <qualifiedname>quantit::any_quantity::~any_quantity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="132" column="1" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1a9c54f38103926637b9d7717c4ccd3398" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_ref</ref></type>
        <definition>any_quantity_ref quantit::any_quantity::operator*=</definition>
        <argsstring>(any_quantity_cref other)</argsstring>
        <name>operator*=</name>
        <qualifiedname>quantit::any_quantity::operator*=</qualifiedname>
        <param>
          <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_cref</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>In place group operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>: constant reference to another composite group of the same type. work with <ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref>, any_quantity_ref and any_quantity_cref for input. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref>&amp; reference to *this </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="140" column="18" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="250" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1a83fb9cad11b7f0f589c698301093b3bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_ref</ref></type>
        <definition>any_quantity_ref quantit::any_quantity::operator+=</definition>
        <argsstring>(any_quantity_cref other)</argsstring>
        <name>operator+=</name>
        <qualifiedname>quantit::any_quantity::operator+=</qualifiedname>
        <param>
          <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_cref</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="141" column="18" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="273" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1a154e128e37a2c5385d7d3293b8b5971b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_ref</ref></type>
        <definition>any_quantity_ref quantit::any_quantity::op</definition>
        <argsstring>(any_quantity_cref other, bool cond)</argsstring>
        <name>op</name>
        <qualifiedname>quantit::any_quantity::op</qualifiedname>
        <param>
          <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_cref</ref></type>
          <declname>other</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cond</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="142" column="18" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="256" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1a547346ca6b62b9c7ef8da68c5f5d2f2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_ref</ref></type>
        <definition>any_quantity_ref quantit::any_quantity::inverse_</definition>
        <argsstring>()</argsstring>
        <name>inverse_</name>
        <qualifiedname>quantit::any_quantity::inverse_</qualifiedname>
        <briefdescription>
<para>in place inverse </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref>&amp; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="164" column="18" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="229" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1acc3573b702443d7407650cd46ff4befe" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref></type>
        <definition>any_quantity quantit::any_quantity::inverse</definition>
        <argsstring>() const &amp;</argsstring>
        <name>inverse</name>
        <qualifiedname>quantit::any_quantity::inverse</qualifiedname>
        <briefdescription>
<para>return a new <ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref> object that is the inverse of this. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="170" column="14" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="234" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1any__quantity_1abd368f8d264f9a9650ed1f4ea5aabc29" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref></type>
        <definition>any_quantity quantit::any_quantity::inverse</definition>
        <argsstring>() &amp;&amp;</argsstring>
        <name>inverse</name>
        <qualifiedname>quantit::any_quantity::inverse</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="171" column="14" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="235" bodyend="239"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classquantit_1_1any__quantity_1a27770f0b29b8f58e0d4d39c74d93c3fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref></type>
        <definition>any_quantity operator*</definition>
        <argsstring>(any_quantity_cref lhs, any_quantity_cref rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>quantit::any_quantity::operator*</qualifiedname>
        <param>
          <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_cref</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_cref</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>out of place group operation, on two composite group element of the same type </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>can be a <ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref>,any_quantity_ref or any_quantity_cref </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>can be a <ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref>,any_quantity_ref or any_quantity_cref </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref> a new <ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="150" column="21" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="255" bodyend="255"/>
      </memberdef>
      <memberdef kind="friend" id="classquantit_1_1any__quantity_1a5015430246a1f5c6b0ce20156dbe84f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref></type>
        <definition>any_quantity operator+</definition>
        <argsstring>(any_quantity_cref lhs, any_quantity_cref rhs)</argsstring>
        <name>operator+</name>
        <qualifiedname>quantit::any_quantity::operator+</qualifiedname>
        <param>
          <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_cref</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_cref</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="151" column="21" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="261" bodyend="261"/>
      </memberdef>
      <memberdef kind="friend" id="classquantit_1_1any__quantity_1a15b3013775efa0739e9990a02819f7b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref></type>
        <definition>any_quantity operator*</definition>
        <argsstring>(any_quantity_cref lhs, any_quantity &amp;&amp;rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>quantit::any_quantity::operator*</qualifiedname>
        <param>
          <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_cref</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="152" column="21" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="291" bodyend="295"/>
      </memberdef>
      <memberdef kind="friend" id="classquantit_1_1any__quantity_1a67a57b391b23657b1e60e29c9331b753" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref></type>
        <definition>any_quantity operator+</definition>
        <argsstring>(any_quantity_cref lhs, any_quantity &amp;&amp;rhs)</argsstring>
        <name>operator+</name>
        <qualifiedname>quantit::any_quantity::operator+</qualifiedname>
        <param>
          <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_cref</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="153" column="21" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="296" bodyend="300"/>
      </memberdef>
      <memberdef kind="friend" id="classquantit_1_1any__quantity_1a061732166ad36e4c1cb93e9ff98b1ac2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref></type>
        <definition>any_quantity operator*</definition>
        <argsstring>(any_quantity &amp;&amp;lhs, any_quantity_cref rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>quantit::any_quantity::operator*</qualifiedname>
        <param>
          <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref> &amp;&amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_cref</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="154" column="21" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="301" bodyend="305"/>
      </memberdef>
      <memberdef kind="friend" id="classquantit_1_1any__quantity_1a4fa66fb0e94a92fa2047fae70a86eecc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref></type>
        <definition>any_quantity operator+</definition>
        <argsstring>(any_quantity &amp;&amp;lhs, any_quantity_cref rhs)</argsstring>
        <name>operator+</name>
        <qualifiedname>quantit::any_quantity::operator+</qualifiedname>
        <param>
          <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref> &amp;&amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classquantit_1_1vquantity" kindref="compound">any_quantity_cref</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="155" column="21" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="306" bodyend="310"/>
      </memberdef>
      <memberdef kind="friend" id="classquantit_1_1any__quantity_1ad777e0adb4130624f6ef2a113a652b3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref></type>
        <definition>any_quantity operator*</definition>
        <argsstring>(any_quantity &amp;&amp;lhs, any_quantity &amp;&amp;rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>quantit::any_quantity::operator*</qualifiedname>
        <param>
          <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref> &amp;&amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="156" column="21" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="311" bodyend="311"/>
      </memberdef>
      <memberdef kind="friend" id="classquantit_1_1any__quantity_1ae3b279db007fb2ff4013bdfed186a95d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref></type>
        <definition>any_quantity operator+</definition>
        <argsstring>(any_quantity &amp;&amp;lhs, any_quantity &amp;&amp;rhs)</argsstring>
        <name>operator+</name>
        <qualifiedname>quantit::any_quantity::operator+</qualifiedname>
        <param>
          <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref> &amp;&amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classquantit_1_1any__quantity" kindref="compound">any_quantity</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="157" column="21" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="312" bodyend="312"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>wrapper for the polymorphic composite groups from vquantity.h that provide value semantics We expect that for a given problem, the type of the underlying cgoup_impl used will be uniform. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" line="40" column="1" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/Conserved/Composite/cquantity.h" bodystart="41" bodyend="190"/>
    <listofallmembers>
      <member refid="classquantit_1_1any__quantity_1ae8506bebe0e2fb8419cfbd371148c5a1" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>any_quantity</name></member>
      <member refid="classquantit_1_1any__quantity_1a1863cfdbac4bb1ae90a6ad97ddf8215b" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>any_quantity</name></member>
      <member refid="classquantit_1_1any__quantity_1a0d55a33316ff6b8caf4ed91fcaa98496" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>any_quantity</name></member>
      <member refid="classquantit_1_1any__quantity_1a00bc0f329e8f9bb6c20a4736bd214400" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>any_quantity</name></member>
      <member refid="classquantit_1_1any__quantity_1a767df070bdc539bc0849f1bf2501af3a" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>any_quantity</name></member>
      <member refid="classquantit_1_1any__quantity_1a1d6a84eead603a1dba8f89d55a374da8" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>any_quantity</name></member>
      <member refid="classquantit_1_1any__quantity_1a41e86ea3afdd514bd530f293940100ee" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>get</name></member>
      <member refid="classquantit_1_1any__quantity_1a7bd0acf869c5f45532d1a683f696541b" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>get</name></member>
      <member refid="classquantit_1_1any__quantity_1a2218d2f7177870aa9e6e2921a31cbe09" prot="private" virt="non-virtual"><scope>quantit::any_quantity</scope><name>impl</name></member>
      <member refid="classquantit_1_1any__quantity_1acc3573b702443d7407650cd46ff4befe" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>inverse</name></member>
      <member refid="classquantit_1_1any__quantity_1abd368f8d264f9a9650ed1f4ea5aabc29" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>inverse</name></member>
      <member refid="classquantit_1_1any__quantity_1a547346ca6b62b9c7ef8da68c5f5d2f2b" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>inverse_</name></member>
      <member refid="classquantit_1_1any__quantity_1aa8c093a2b1d5c34d94f3ab592ff7e13d" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>neutral</name></member>
      <member refid="classquantit_1_1any__quantity_1a154e128e37a2c5385d7d3293b8b5971b" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>op</name></member>
      <member refid="classquantit_1_1any__quantity_1ae056980308dca3d6fda141061ce1e29e" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>operator any_quantity_cref</name></member>
      <member refid="classquantit_1_1any__quantity_1a890408ca918ea9cb0de2e36b5323d282" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>operator any_quantity_ref</name></member>
      <member refid="classquantit_1_1any__quantity_1a27770f0b29b8f58e0d4d39c74d93c3fd" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>operator*</name></member>
      <member refid="classquantit_1_1any__quantity_1a15b3013775efa0739e9990a02819f7b8" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>operator*</name></member>
      <member refid="classquantit_1_1any__quantity_1a061732166ad36e4c1cb93e9ff98b1ac2" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>operator*</name></member>
      <member refid="classquantit_1_1any__quantity_1ad777e0adb4130624f6ef2a113a652b3f" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>operator*</name></member>
      <member refid="classquantit_1_1any__quantity_1a9c54f38103926637b9d7717c4ccd3398" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>operator*=</name></member>
      <member refid="classquantit_1_1any__quantity_1a5015430246a1f5c6b0ce20156dbe84f3" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>operator+</name></member>
      <member refid="classquantit_1_1any__quantity_1a67a57b391b23657b1e60e29c9331b753" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>operator+</name></member>
      <member refid="classquantit_1_1any__quantity_1a4fa66fb0e94a92fa2047fae70a86eecc" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>operator+</name></member>
      <member refid="classquantit_1_1any__quantity_1ae3b279db007fb2ff4013bdfed186a95d" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>operator+</name></member>
      <member refid="classquantit_1_1any__quantity_1a83fb9cad11b7f0f589c698301093b3bf" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>operator+=</name></member>
      <member refid="classquantit_1_1any__quantity_1a6b6c29d553dcf03438472ddc7b5a95b1" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>operator=</name></member>
      <member refid="classquantit_1_1any__quantity_1a1c328cdd7adb6fb98dcf9055498a8f7f" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>operator=</name></member>
      <member refid="classquantit_1_1any__quantity_1ae77d58e9bfa7a7647d66926e16c8904f" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>operator=</name></member>
      <member refid="classquantit_1_1any__quantity_1a09b8d708df66713eea0cb6906d7659e3" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>operator=</name></member>
      <member refid="classquantit_1_1any__quantity_1ad0d315c7b2da8a1328e2b902835f22d4" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>swap</name></member>
      <member refid="classquantit_1_1any__quantity_1a90757051196169d5e2d10787de6ed9f6" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>swap</name></member>
      <member refid="classquantit_1_1any__quantity_1a7443a3a827eaa958ac86bdc3c26c95e5" prot="public" virt="non-virtual"><scope>quantit::any_quantity</scope><name>~any_quantity</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
