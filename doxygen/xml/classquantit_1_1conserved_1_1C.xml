<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classquantit_1_1conserved_1_1C" kind="class" language="C++" prot="public">
    <compoundname>quantit::conserved::C</compoundname>
    <includes refid="quantity_8h" local="no">quantity.h</includes>
    <templateparamlist>
      <param>
        <type>uint16_t</type>
        <declname>mod</declname>
        <defname>mod</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classquantit_1_1conserved_1_1C_1afd0679280fdbaaeb20d1077bcec9a5a2" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint16_t</type>
        <definition>constexpr uint16_t quantit::conserved::C&lt; mod &gt;::N</definition>
        <argsstring></argsstring>
        <name>N</name>
        <initializer>= mod</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="66" column="27" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classquantit_1_1conserved_1_1C_1affa493ce83ff3151a7d6847302de624c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static bool</type>
        <definition>constexpr static bool quantit::conserved::C&lt; mod &gt;::is_Abelian</definition>
        <argsstring></argsstring>
        <name>is_Abelian</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="74" column="23" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classquantit_1_1conserved_1_1C_1ac5c2b211606c9e3087d8a14a1c8a63c9" prot="private" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t quantit::conserved::C&lt; mod &gt;::val</definition>
        <argsstring></argsstring>
        <name>val</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="71" column="10" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classquantit_1_1conserved_1_1C_1ad0427928b3ad92ea4807a52e099a23bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>friend struct fmt::formatter&lt; quantit::conserved::C&lt; N &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>fmt::formatter&lt; quantit::conserved::C&lt; N &gt; &gt;</name>
        <param>
          <type>fmt::formatter&lt; <ref refid="classquantit_1_1conserved_1_1C" kindref="compound">quantit::conserved::C</ref>&lt; N &gt; &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="158" column="8" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classquantit_1_1conserved_1_1C_1aec5542e071abcd108bc671ddfa4a52a5" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr friend <ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref></type>
        <definition>constexpr friend C operator+</definition>
        <argsstring>(C lhs, C rhs) noexcept</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="132" column="20" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="friend" id="classquantit_1_1conserved_1_1C_1a98f16a8a504cdfd26778e21da76b5463" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr friend <ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref></type>
        <definition>constexpr friend C operator*</definition>
        <argsstring>(C lhs, C rhs) noexcept</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="133" column="20" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="friend" id="classquantit_1_1conserved_1_1C_1a232fbe17fb539b9a8c399410fc234997" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const C &amp;c)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="158" column="8" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="158" bodyend="162"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classquantit_1_1conserved_1_1C_1afbdccb8d9b7932103fb1fab7e226a36a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr quantit::conserved::C&lt; mod &gt;::C</definition>
        <argsstring>(int16_t _val) noexcept</argsstring>
        <name>C</name>
        <param>
          <type>int16_t</type>
          <declname>_val</declname>
        </param>
        <briefdescription>
<para>constructor using singed integers </para>
        </briefdescription>
        <detaileddescription>
<para>allow construction using minus sign as the inverse operation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="96" column="11" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="96" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1conserved_1_1C_1aae8a8b6d8dd471dd4e9030ed70b83a50" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr quantit::conserved::C&lt; mod &gt;::C</definition>
        <argsstring>()</argsstring>
        <name>C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="107" column="11" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1conserved_1_1C_1a3ffb86c857a8135152ca70ba36cb5ec8" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void quantit::conserved::C&lt; mod &gt;::swap</definition>
        <argsstring>(C &amp;other) noexcept</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="109" column="6" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1conserved_1_1C_1ae62939de9fe6c0b4aae1702aa0674392" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr quantit::conserved::C&lt; mod &gt;::operator uint16_t</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator uint16_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="114" column="11" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1conserved_1_1C_1a40e45834c5e2b6189cee39ce3512ec68" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr uint16_t</type>
        <definition>constexpr uint16_t quantit::conserved::C&lt; mod &gt;::get_val</definition>
        <argsstring>() const noexcept</argsstring>
        <name>get_val</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="115" column="20" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1conserved_1_1C_1a168c261ced2a923c26a7e038727d7a29" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref> &amp;</type>
        <definition>constexpr C&amp; quantit::conserved::C&lt; mod &gt;::operator+=</definition>
        <argsstring>(C other) noexcept</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="116" column="13" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1conserved_1_1C_1a61a04cede598f7fde5ed939ed08e6543" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref> &amp;</type>
        <definition>constexpr C&amp; quantit::conserved::C&lt; mod &gt;::op</definition>
        <argsstring>(C other) noexcept</argsstring>
        <name>op</name>
        <param>
          <type><ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="118" column="13" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1conserved_1_1C_1a2067f015c0735f7de0dd6b498f4b64eb" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref> &amp;</type>
        <definition>constexpr C&amp; quantit::conserved::C&lt; mod &gt;::op</definition>
        <argsstring>(C other, bool cond) noexcept</argsstring>
        <name>op</name>
        <param>
          <type><ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref></type>
          <declname>other</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cond</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="120" column="13" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="120" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1conserved_1_1C_1a014286eb806f5aa752f553dae33c035c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref> &amp;</type>
        <definition>constexpr C&amp; quantit::conserved::C&lt; mod &gt;::operator*=</definition>
        <argsstring>(C other) noexcept</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="127" column="13" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="127" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1conserved_1_1C_1a2ee224ac46fb556287dfc7779084b824" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref> &amp;</type>
        <definition>constexpr C&amp; quantit::conserved::C&lt; mod &gt;::inverse_</definition>
        <argsstring>() noexcept</argsstring>
        <name>inverse_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="134" column="13" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="134" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1conserved_1_1C_1a54d060ed53f1ba97ae8ab5123a4e1b3d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref></type>
        <definition>constexpr C quantit::conserved::C&lt; mod &gt;::inverse</definition>
        <argsstring>() const noexcept</argsstring>
        <name>inverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="139" column="13" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="139" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1conserved_1_1C_1a91a0cea32e74047d70f25f5d9a6a0ef4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t quantit::conserved::C&lt; mod &gt;::distance2</definition>
        <argsstring>(C other) const</argsstring>
        <name>distance2</name>
        <param>
          <type><ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="144" column="9" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1conserved_1_1C_1acd3e3e92891b86d9554774bd9c5351b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double quantit::conserved::C&lt; mod &gt;::distance</definition>
        <argsstring>(C other) const</argsstring>
        <name>distance</name>
        <param>
          <type><ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="148" column="8" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1conserved_1_1C_1ac9a50ced05581341a57427dff6219b4c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool quantit::conserved::C&lt; mod &gt;::operator==</definition>
        <argsstring>(C other) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="153" column="16" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1conserved_1_1C_1af6f77cbb7f0328606f3dabbf48edae49" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool quantit::conserved::C&lt; mod &gt;::operator&lt;</definition>
        <argsstring>(C other) const noexcept</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="154" column="11" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1conserved_1_1C_1a906465ab85bc679d459748a59498cd10" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool quantit::conserved::C&lt; mod &gt;::operator&gt;</definition>
        <argsstring>(C other) const noexcept</argsstring>
        <name>operator&gt;</name>
        <param>
          <type><ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="155" column="16" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1conserved_1_1C_1a670b65189950226066fb7f065aec54dd" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool quantit::conserved::C&lt; mod &gt;::operator!=</definition>
        <argsstring>(C other) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="classquantit_1_1conserved_1_1C" kindref="compound">C</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="156" column="16" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="156" bodyend="156"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>C_N, the cyclic group with N elements. The conserved quantities associated with discrete rotationnal symmetry are element of this familly of groups. </para>
    </briefdescription>
    <detaileddescription>
<para>Oftentime called Z_N in the literature. This would create a name clash with the infinite group <ref refid="classquantit_1_1conserved_1_1Z" kindref="compound">Z</ref>.</para>
<para>Note that the implementation limits the length of the cycle to less than 2^16-1 </para>
    </detaileddescription>
    <location file="/home/alex/project/quantt/include/Conserved/quantity.h" line="63" column="1" bodyfile="/home/alex/project/quantt/include/Conserved/quantity.h" bodystart="64" bodyend="164"/>
    <listofallmembers>
      <member refid="classquantit_1_1conserved_1_1C_1afbdccb8d9b7932103fb1fab7e226a36a" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>C</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1aae8a8b6d8dd471dd4e9030ed70b83a50" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>C</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1acd3e3e92891b86d9554774bd9c5351b4" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>distance</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1a91a0cea32e74047d70f25f5d9a6a0ef4" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>distance2</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1ad0427928b3ad92ea4807a52e099a23bc" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>fmt::formatter&lt; quantit::conserved::C&lt; N &gt; &gt;</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1a40e45834c5e2b6189cee39ce3512ec68" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>get_val</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1a54d060ed53f1ba97ae8ab5123a4e1b3d" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>inverse</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1a2ee224ac46fb556287dfc7779084b824" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>inverse_</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1affa493ce83ff3151a7d6847302de624c" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>is_Abelian</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1afd0679280fdbaaeb20d1077bcec9a5a2" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>N</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1a61a04cede598f7fde5ed939ed08e6543" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>op</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1a2067f015c0735f7de0dd6b498f4b64eb" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>op</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1ae62939de9fe6c0b4aae1702aa0674392" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>operator uint16_t</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1a670b65189950226066fb7f065aec54dd" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>operator!=</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1a98f16a8a504cdfd26778e21da76b5463" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>operator*</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1a014286eb806f5aa752f553dae33c035c" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>operator*=</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1aec5542e071abcd108bc671ddfa4a52a5" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>operator+</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1a168c261ced2a923c26a7e038727d7a29" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>operator+=</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1af6f77cbb7f0328606f3dabbf48edae49" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>operator&lt;</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1a232fbe17fb539b9a8c399410fc234997" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>operator&lt;&lt;</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1ac9a50ced05581341a57427dff6219b4c" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>operator==</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1a906465ab85bc679d459748a59498cd10" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>operator&gt;</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1a3ffb86c857a8135152ca70ba36cb5ec8" prot="public" virt="non-virtual"><scope>quantit::conserved::C</scope><name>swap</name></member>
      <member refid="classquantit_1_1conserved_1_1C_1ac5c2b211606c9e3087d8a14a1c8a63c9" prot="private" virt="non-virtual"><scope>quantit::conserved::C</scope><name>val</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
