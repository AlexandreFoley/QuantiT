<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classquantit_1_1flat__map_1_1const__iterator" kind="class" language="C++" prot="public">
    <compoundname>quantit::flat_map::const_iterator</compoundname>
    <basecompoundref prot="public" virt="non-virtual">boost::stl_interfaces::iterator_interface&lt; const_iterator, const_iterator_tag, const value_type, const_reference, const_pointer, difference_type &gt;</basecompoundref>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classquantit_1_1flat__map_1_1const__iterator_1a418cf55ab5767696c6065cae734b1c6a" prot="private" static="no">
        <type>typename content_t::const_iterator</type>
        <definition>using quantit::flat_map&lt; Key, Value, Comp_less, Allocator, Array &gt;::const_iterator::it_type =  typename content_t::const_iterator</definition>
        <argsstring></argsstring>
        <name>it_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/blockTensor/flat_map.h" line="95" column="1" bodyfile="/home/alex/project/quantt/include/blockTensor/flat_map.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classquantit_1_1flat__map_1_1const__iterator_1ad062426e1ca806fb61968a6a9a4fbe2c" prot="private" static="no" mutable="no">
        <type>it_type</type>
        <definition>it_type quantit::flat_map&lt; Key, Value, Comp_less, Allocator, Array &gt;::const_iterator::it</definition>
        <argsstring></argsstring>
        <name>it</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/blockTensor/flat_map.h" line="96" column="9" bodyfile="/home/alex/project/quantt/include/blockTensor/flat_map.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classquantit_1_1flat__map_1_1const__iterator_1a0889564ef8be29227f91170544fb092c" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend quantit::flat_map&lt; Key, Value, Comp_less, Allocator, Array &gt;::const_iterator::flat_map</definition>
        <argsstring></argsstring>
        <name>flat_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/blockTensor/flat_map.h" line="116" column="8" bodyfile="/home/alex/project/quantt/include/blockTensor/flat_map.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classquantit_1_1flat__map_1_1const__iterator_1a4bddf46011f5bad7ea25de30f13af90d" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr quantit::flat_map&lt; Key, Value, Comp_less, Allocator, Array &gt;::const_iterator::const_iterator</definition>
        <argsstring>(const typename content_t::iterator &amp;in)</argsstring>
        <name>const_iterator</name>
        <param>
          <type>const typename content_t::iterator &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/blockTensor/flat_map.h" line="99" column="20" bodyfile="/home/alex/project/quantt/include/blockTensor/flat_map.h" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1flat__map_1_1const__iterator_1abbf0f75d059a9011633a2ff7ef0f9d93" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr quantit::flat_map&lt; Key, Value, Comp_less, Allocator, Array &gt;::const_iterator::const_iterator</definition>
        <argsstring>(const typename content_t::const_iterator &amp;in)</argsstring>
        <name>const_iterator</name>
        <param>
          <type>const typename content_t::const_iterator &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/blockTensor/flat_map.h" line="100" column="20" bodyfile="/home/alex/project/quantt/include/blockTensor/flat_map.h" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1flat__map_1_1const__iterator_1a9b2d04a2d8645602dea4d33e342251b3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr quantit::flat_map&lt; Key, Value, Comp_less, Allocator, Array &gt;::const_iterator::const_iterator</definition>
        <argsstring>()</argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/blockTensor/flat_map.h" line="101" column="11" bodyfile="/home/alex/project/quantt/include/blockTensor/flat_map.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1flat__map_1_1const__iterator_1ac27559cd331534a5a4b63653b92fe80d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr quantit::flat_map&lt; Key, Value, Comp_less, Allocator, Array &gt;::const_iterator::const_iterator</definition>
        <argsstring>(const iterator &amp;in)</argsstring>
        <name>const_iterator</name>
        <param>
          <type>const <ref refid="classquantit_1_1flat__map_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/blockTensor/flat_map.h" line="102" column="11" bodyfile="/home/alex/project/quantt/include/blockTensor/flat_map.h" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1flat__map_1_1const__iterator_1a7b6abb873278399d808402051d064791" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr quantit::flat_map&lt; Key, Value, Comp_less, Allocator, Array &gt;::const_iterator::const_iterator</definition>
        <argsstring>(const const_iterator &amp;in)</argsstring>
        <name>const_iterator</name>
        <param>
          <type>const <ref refid="classquantit_1_1flat__map_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/blockTensor/flat_map.h" line="103" column="11" bodyfile="/home/alex/project/quantt/include/blockTensor/flat_map.h" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1flat__map_1_1const__iterator_1a282d06d61c4f7a9205a2eaba1fe10518" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classquantit_1_1flat__map_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
        <definition>constexpr const_iterator&amp; quantit::flat_map&lt; Key, Value, Comp_less, Allocator, Array &gt;::const_iterator::operator+=</definition>
        <argsstring>(std::ptrdiff_t in)</argsstring>
        <name>operator+=</name>
        <param>
          <type>std::ptrdiff_t</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/blockTensor/flat_map.h" line="104" column="26" bodyfile="/home/alex/project/quantt/include/blockTensor/flat_map.h" bodystart="104" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1flat__map_1_1const__iterator_1a68d48dbe60797a4ca3f6ebbc54d287b3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const value_type *</type>
        <definition>constexpr const value_type* quantit::flat_map&lt; Key, Value, Comp_less, Allocator, Array &gt;::const_iterator::base</definition>
        <argsstring>()</argsstring>
        <name>base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/blockTensor/flat_map.h" line="110" column="28" bodyfile="/home/alex/project/quantt/include/blockTensor/flat_map.h" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1flat__map_1_1const__iterator_1ac2864e70dd3b83dc03284e008aaf15c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>quantit::flat_map&lt; Key, Value, Comp_less, Allocator, Array &gt;::const_iterator::operator it_type</definition>
        <argsstring>()</argsstring>
        <name>operator it_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/blockTensor/flat_map.h" line="113" column="1" bodyfile="/home/alex/project/quantt/include/blockTensor/flat_map.h" bodystart="113" bodyend="113"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classquantit_1_1flat__map_1_1const__iterator_1ab32fe646b831c22bb52135a5b97e3eab" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr it_type &amp;</type>
        <definition>constexpr it_type&amp; quantit::flat_map&lt; Key, Value, Comp_less, Allocator, Array &gt;::const_iterator::base_reference</definition>
        <argsstring>() noexcept</argsstring>
        <name>base_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/blockTensor/flat_map.h" line="117" column="19" bodyfile="/home/alex/project/quantt/include/blockTensor/flat_map.h" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1flat__map_1_1const__iterator_1a700fd8dc585585a232c5338bc2dcbc66" prot="private" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr it_type</type>
        <definition>constexpr it_type quantit::flat_map&lt; Key, Value, Comp_less, Allocator, Array &gt;::const_iterator::base_reference</definition>
        <argsstring>() const noexcept</argsstring>
        <name>base_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/blockTensor/flat_map.h" line="118" column="19" bodyfile="/home/alex/project/quantt/include/blockTensor/flat_map.h" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1flat__map_1_1const__iterator_1ad5d35d4e837aa8b2d28cb329e3e0e24e" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>quantit::flat_map&lt; Key, Value, Comp_less, Allocator, Array &gt;::const_iterator::operator it_type</definition>
        <argsstring>() const</argsstring>
        <name>operator it_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/blockTensor/flat_map.h" line="119" column="1" bodyfile="/home/alex/project/quantt/include/blockTensor/flat_map.h" bodystart="119" bodyend="119"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>quantit::flat_map&lt; Key, Value, Comp_less, Allocator, Array &gt;::const_iterator</label>
        <link refid="classquantit_1_1flat__map_1_1const__iterator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>boost::stl_interfaces::iterator_interface&lt; const_iterator, const_iterator_tag, const value_type, const_reference, const_pointer, difference_type &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>quantit::flat_map&lt; Key, Value, Comp_less, Allocator, Array &gt;::const_iterator</label>
        <link refid="classquantit_1_1flat__map_1_1const__iterator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>boost::stl_interfaces::iterator_interface&lt; const_iterator, const_iterator_tag, const value_type, const_reference, const_pointer, difference_type &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/alex/project/quantt/include/blockTensor/flat_map.h" line="90" column="1" bodyfile="/home/alex/project/quantt/include/blockTensor/flat_map.h" bodystart="94" bodyend="120"/>
    <listofallmembers>
      <member refid="classquantit_1_1flat__map_1_1const__iterator_1a68d48dbe60797a4ca3f6ebbc54d287b3" prot="public" virt="non-virtual"><scope>quantit::flat_map::const_iterator</scope><name>base</name></member>
      <member refid="classquantit_1_1flat__map_1_1const__iterator_1ab32fe646b831c22bb52135a5b97e3eab" prot="private" virt="non-virtual"><scope>quantit::flat_map::const_iterator</scope><name>base_reference</name></member>
      <member refid="classquantit_1_1flat__map_1_1const__iterator_1a700fd8dc585585a232c5338bc2dcbc66" prot="private" virt="non-virtual"><scope>quantit::flat_map::const_iterator</scope><name>base_reference</name></member>
      <member refid="classquantit_1_1flat__map_1_1const__iterator_1a4bddf46011f5bad7ea25de30f13af90d" prot="public" virt="non-virtual"><scope>quantit::flat_map::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classquantit_1_1flat__map_1_1const__iterator_1abbf0f75d059a9011633a2ff7ef0f9d93" prot="public" virt="non-virtual"><scope>quantit::flat_map::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classquantit_1_1flat__map_1_1const__iterator_1a9b2d04a2d8645602dea4d33e342251b3" prot="public" virt="non-virtual"><scope>quantit::flat_map::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classquantit_1_1flat__map_1_1const__iterator_1ac27559cd331534a5a4b63653b92fe80d" prot="public" virt="non-virtual"><scope>quantit::flat_map::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classquantit_1_1flat__map_1_1const__iterator_1a7b6abb873278399d808402051d064791" prot="public" virt="non-virtual"><scope>quantit::flat_map::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classquantit_1_1flat__map_1_1const__iterator_1a0889564ef8be29227f91170544fb092c" prot="private" virt="non-virtual"><scope>quantit::flat_map::const_iterator</scope><name>flat_map</name></member>
      <member refid="classquantit_1_1flat__map_1_1const__iterator_1ad062426e1ca806fb61968a6a9a4fbe2c" prot="private" virt="non-virtual"><scope>quantit::flat_map::const_iterator</scope><name>it</name></member>
      <member refid="classquantit_1_1flat__map_1_1const__iterator_1a418cf55ab5767696c6065cae734b1c6a" prot="private" virt="non-virtual"><scope>quantit::flat_map::const_iterator</scope><name>it_type</name></member>
      <member refid="classquantit_1_1flat__map_1_1const__iterator_1ac2864e70dd3b83dc03284e008aaf15c7" prot="public" virt="non-virtual"><scope>quantit::flat_map::const_iterator</scope><name>operator it_type</name></member>
      <member refid="classquantit_1_1flat__map_1_1const__iterator_1ad5d35d4e837aa8b2d28cb329e3e0e24e" prot="private" virt="non-virtual"><scope>quantit::flat_map::const_iterator</scope><name>operator it_type</name></member>
      <member refid="classquantit_1_1flat__map_1_1const__iterator_1a282d06d61c4f7a9205a2eaba1fe10518" prot="public" virt="non-virtual"><scope>quantit::flat_map::const_iterator</scope><name>operator+=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
