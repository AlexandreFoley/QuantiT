<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classquantit_1_1dmrg__log__simple" kind="class" language="C++" prot="public" final="yes">
    <compoundname>quantit::dmrg_log_simple</compoundname>
    <basecompoundref refid="classquantit_1_1dmrg__default__logger" prot="public" virt="non-virtual">quantit::dmrg_default_logger</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classquantit_1_1dmrg__log__simple_1aaf9cddd1984840b633e36c52ff6c1c80" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t quantit::dmrg_log_simple::it_num</definition>
        <argsstring></argsstring>
        <name>it_num</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/dmrg_logger.h" line="116" column="8" bodyfile="/home/alex/project/quantt/include/dmrg_logger.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classquantit_1_1dmrg__log__simple_1aec05ac6076c1601f89539a80f89745af" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t quantit::dmrg_log_simple::middle_bond_dim</definition>
        <argsstring></argsstring>
        <name>middle_bond_dim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/dmrg_logger.h" line="117" column="8" bodyfile="/home/alex/project/quantt/include/dmrg_logger.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classquantit_1_1dmrg__log__simple_1a97a573fc095627c512c488942adcfca9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void quantit::dmrg_log_simple::log_step</definition>
        <argsstring>(size_t it) override</argsstring>
        <name>log_step</name>
        <reimplements refid="classquantit_1_1dmrg__default__logger_1ab2c8ffc1abbb4bd3380888d6a2f0b313">log_step</reimplements>
        <param>
          <type>size_t</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/dmrg_logger.h" line="119" column="6" bodyfile="/home/alex/project/quantt/include/dmrg_logger.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__log__simple_1afff2dadf5090e7658c6d10a025717d57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void quantit::dmrg_log_simple::log_bond_dims</definition>
        <argsstring>(const quantit::bMPS &amp;mps) override</argsstring>
        <name>log_bond_dims</name>
        <reimplements refid="classquantit_1_1dmrg__default__logger_1a6ca24a9c43841bfa95e540ea01d42725">log_bond_dims</reimplements>
        <param>
          <type>const <ref refid="classquantit_1_1bMPS" kindref="compound">quantit::bMPS</ref> &amp;</type>
          <declname>mps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/dmrg_logger.h" line="120" column="6" bodyfile="/home/alex/project/quantt/include/dmrg_logger.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__log__simple_1a0ab2fa53e8af659b4f142e264760da18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void quantit::dmrg_log_simple::log_bond_dims</definition>
        <argsstring>(const quantit::MPS &amp;mps) override</argsstring>
        <name>log_bond_dims</name>
        <reimplements refid="classquantit_1_1dmrg__default__logger_1ac9216b600e0e625aae2f7ff8a27daa09">log_bond_dims</reimplements>
        <param>
          <type>const <ref refid="classquantit_1_1MPS" kindref="compound">quantit::MPS</ref> &amp;</type>
          <declname>mps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/dmrg_logger.h" line="121" column="6" bodyfile="/home/alex/project/quantt/include/dmrg_logger.h" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__log__simple_1a474aeafcac00435f639aa70211feed3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void quantit::dmrg_log_simple::it_log_all</definition>
        <argsstring>(size_t, const torch::Tensor &amp;, const quantit::MPS &amp;) override</argsstring>
        <name>it_log_all</name>
        <reimplements refid="classquantit_1_1dmrg__logger_1aec679b092519a3b96ca9d4df7b388af5">it_log_all</reimplements>
        <param>
          <type>size_t</type>
          <declname>step_num</declname>
        </param>
        <param>
          <type>const torch::Tensor &amp;</type>
          <declname>E</declname>
        </param>
        <param>
          <type>const <ref refid="classquantit_1_1MPS" kindref="compound">quantit::MPS</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Logs the energy and the state of the <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> during the dmrg iterations.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>step_num</parametername>
</parameternamelist>
<parameterdescription>
<para>the current step number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>the energy of the state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> state at the current step. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/dmrg_logger.h" line="122" column="6" bodyfile="/home/alex/project/quantt/include/dmrg_logger.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__log__simple_1adc0139d3f688086acdac169e0af2df8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void quantit::dmrg_log_simple::it_log_all</definition>
        <argsstring>(size_t, const btensor &amp;, const bMPS &amp;) override</argsstring>
        <name>it_log_all</name>
        <reimplements refid="classquantit_1_1dmrg__logger_1ae174380571b94f642328d02b1ef0e997">it_log_all</reimplements>
        <param>
          <type>size_t</type>
          <declname>step_num</declname>
        </param>
        <param>
          <type>const <ref refid="classquantit_1_1btensor" kindref="compound">btensor</ref> &amp;</type>
          <declname>E</declname>
        </param>
        <param>
          <type>const <ref refid="classquantit_1_1bMPS" kindref="compound">bMPS</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Logs the energy and the state of the <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> during the dmrg iterations.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>step_num</parametername>
</parameternamelist>
<parameterdescription>
<para>the current step number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>the energy of the state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> state at the current step. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/dmrg_logger.h" line="123" column="6" bodyfile="/home/alex/project/quantt/include/dmrg_logger.h" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__default__logger_1a2ca8bec802551042f5faddd2096532b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void quantit::dmrg_default_logger::log_energy</definition>
        <argsstring>(const torch::Tensor &amp;) override</argsstring>
        <name>log_energy</name>
        <reimplements refid="classquantit_1_1dmrg__logger_1adf57a1768566ea3d8c1cc12bb02123c7">log_energy</reimplements>
        <reimplementedby refid="classquantit_1_1dmrg__log__sweeptime_1a389dab85289bd6b53c6b01a0e26e8ef5">log_energy</reimplementedby>
        <param>
          <type>const torch::Tensor &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/dmrg_logger.h" line="107" column="6" bodyfile="/home/alex/project/quantt/include/dmrg_logger.h" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__default__logger_1af639c233e813832f6054f8beb93cb4eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void quantit::dmrg_default_logger::log_energy</definition>
        <argsstring>(const btensor &amp;) override</argsstring>
        <name>log_energy</name>
        <reimplements refid="classquantit_1_1dmrg__logger_1aa2cbfa33cfa1478cee7d00327c4d9bb9">log_energy</reimplements>
        <reimplementedby refid="classquantit_1_1dmrg__log__sweeptime_1a44db410afddac9861524d34e2e1e6be9">log_energy</reimplementedby>
        <param>
          <type>const <ref refid="classquantit_1_1btensor" kindref="compound">btensor</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/dmrg_logger.h" line="108" column="6" bodyfile="/home/alex/project/quantt/include/dmrg_logger.h" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__logger_1aefeab435b25cd1e822d53d0c01fcf7cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void quantit::dmrg_logger::init</definition>
        <argsstring>(const dmrg_options &amp;)</argsstring>
        <name>init</name>
        <reimplementedby refid="classquantit_1_1dmrg__log__sweeptime_1a2d27e6b93bbca9fe40b1bc309268b341">init</reimplementedby>
        <param>
          <type>const <ref refid="structquantit_1_1dmrg__options" kindref="compound">dmrg_options</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/dmrg_logger.h" line="36" column="14" bodyfile="/home/alex/project/quantt/include/dmrg_logger.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__logger_1a40e35a635a42df1666b452aaaeba3c22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void quantit::dmrg_logger::end_log_all</definition>
        <argsstring>(size_t step_num, const torch::Tensor &amp;E, const MPS &amp;state)</argsstring>
        <name>end_log_all</name>
        <param>
          <type>size_t</type>
          <declname>step_num</declname>
        </param>
        <param>
          <type>const torch::Tensor &amp;</type>
          <declname>E</declname>
        </param>
        <param>
          <type>const <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Logs the energy and the state of the <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> when the DMRG procedure is done.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>step_num</parametername>
</parameternamelist>
<parameterdescription>
<para>the current step number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>the energy of the state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> state at the end of the step. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/dmrg_logger.h" line="61" column="14" bodyfile="/home/alex/project/quantt/include/dmrg_logger.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__logger_1aefe31347ea89511837801ca25bce9c3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void quantit::dmrg_logger::end_log_all</definition>
        <argsstring>(size_t step_num, const btensor &amp;E, const bMPS &amp;state)</argsstring>
        <name>end_log_all</name>
        <param>
          <type>size_t</type>
          <declname>step_num</declname>
        </param>
        <param>
          <type>const <ref refid="classquantit_1_1btensor" kindref="compound">btensor</ref> &amp;</type>
          <declname>E</declname>
        </param>
        <param>
          <type>const <ref refid="classquantit_1_1bMPS" kindref="compound">bMPS</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Logs the energy and the state of the <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> when the DMRG procedure is done.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>step_num</parametername>
</parameternamelist>
<parameterdescription>
<para>the current step number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>the energy of the state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> state at the end of the step. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/dmrg_logger.h" line="69" column="14" bodyfile="/home/alex/project/quantt/include/dmrg_logger.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__logger_1a9f638588362a5b58350f5cbbec1b417e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void quantit::dmrg_logger::log_all</definition>
        <argsstring>(size_t step_num, const torch::Tensor &amp;E, const MPS &amp;state)</argsstring>
        <name>log_all</name>
        <param>
          <type>size_t</type>
          <declname>step_num</declname>
        </param>
        <param>
          <type>const torch::Tensor &amp;</type>
          <declname>E</declname>
        </param>
        <param>
          <type>const <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Log the current step number, the current energy, and the bond dimensions of the <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>step_num</parametername>
</parameternamelist>
<parameterdescription>
<para>the current step number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>the energy of the state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> state to log. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/dmrg_logger.h" line="78" column="14" bodyfile="/home/alex/project/quantt/include/dmrg_logger.h" bodystart="78" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__logger_1ac04464f362a6f8e37b38696ccbcf067a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void quantit::dmrg_logger::log_all</definition>
        <argsstring>(size_t step_num, const btensor &amp;E, const bMPS &amp;state)</argsstring>
        <name>log_all</name>
        <param>
          <type>size_t</type>
          <declname>step_num</declname>
        </param>
        <param>
          <type>const <ref refid="classquantit_1_1btensor" kindref="compound">btensor</ref> &amp;</type>
          <declname>E</declname>
        </param>
        <param>
          <type>const <ref refid="classquantit_1_1bMPS" kindref="compound">bMPS</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Log the current step number, the current energy, and the bond dimensions of the <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>step_num</parametername>
</parameternamelist>
<parameterdescription>
<para>the current step number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>the energy of the state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> state to log. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/dmrg_logger.h" line="91" column="14" bodyfile="/home/alex/project/quantt/include/dmrg_logger.h" bodystart="91" bodyend="96"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classquantit_1_1dmrg__log__simple_1ac8407ec075b07fea474f2841f433126f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class tMPS</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void quantit::dmrg_log_simple::log_bond_impl</definition>
        <argsstring>(const tMPS &amp;mps)</argsstring>
        <name>log_bond_impl</name>
        <param>
          <type>const tMPS &amp;</type>
          <declname>mps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/project/quantt/include/dmrg_logger.h" line="127" column="6" bodyfile="/home/alex/project/quantt/include/dmrg_logger.h" bodystart="127" bodyend="131"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>quantit::dmrg_default_logger</label>
        <link refid="classquantit_1_1dmrg__default__logger"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>quantit::dmrg_logger</label>
        <link refid="classquantit_1_1dmrg__logger"/>
      </node>
      <node id="1">
        <label>quantit::dmrg_log_simple</label>
        <link refid="classquantit_1_1dmrg__log__simple"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>quantit::dmrg_default_logger</label>
        <link refid="classquantit_1_1dmrg__default__logger"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>quantit::dmrg_logger</label>
        <link refid="classquantit_1_1dmrg__logger"/>
      </node>
      <node id="1">
        <label>quantit::dmrg_log_simple</label>
        <link refid="classquantit_1_1dmrg__log__simple"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/alex/project/quantt/include/dmrg_logger.h" line="113" column="1" bodyfile="/home/alex/project/quantt/include/dmrg_logger.h" bodystart="114" bodyend="132"/>
    <listofallmembers>
      <member refid="classquantit_1_1dmrg__logger_1a40e35a635a42df1666b452aaaeba3c22" prot="public" virt="virtual"><scope>quantit::dmrg_log_simple</scope><name>end_log_all</name></member>
      <member refid="classquantit_1_1dmrg__logger_1aefe31347ea89511837801ca25bce9c3a" prot="public" virt="virtual"><scope>quantit::dmrg_log_simple</scope><name>end_log_all</name></member>
      <member refid="classquantit_1_1dmrg__logger_1aefeab435b25cd1e822d53d0c01fcf7cc" prot="public" virt="virtual"><scope>quantit::dmrg_log_simple</scope><name>init</name></member>
      <member refid="classquantit_1_1dmrg__log__simple_1a474aeafcac00435f639aa70211feed3d" prot="public" virt="virtual"><scope>quantit::dmrg_log_simple</scope><name>it_log_all</name></member>
      <member refid="classquantit_1_1dmrg__log__simple_1adc0139d3f688086acdac169e0af2df8b" prot="public" virt="virtual"><scope>quantit::dmrg_log_simple</scope><name>it_log_all</name></member>
      <member refid="classquantit_1_1dmrg__log__simple_1aaf9cddd1984840b633e36c52ff6c1c80" prot="public" virt="non-virtual"><scope>quantit::dmrg_log_simple</scope><name>it_num</name></member>
      <member refid="classquantit_1_1dmrg__logger_1a9f638588362a5b58350f5cbbec1b417e" prot="public" virt="virtual"><scope>quantit::dmrg_log_simple</scope><name>log_all</name></member>
      <member refid="classquantit_1_1dmrg__logger_1ac04464f362a6f8e37b38696ccbcf067a" prot="public" virt="virtual"><scope>quantit::dmrg_log_simple</scope><name>log_all</name></member>
      <member refid="classquantit_1_1dmrg__log__simple_1afff2dadf5090e7658c6d10a025717d57" prot="public" virt="virtual"><scope>quantit::dmrg_log_simple</scope><name>log_bond_dims</name></member>
      <member refid="classquantit_1_1dmrg__log__simple_1a0ab2fa53e8af659b4f142e264760da18" prot="public" virt="virtual"><scope>quantit::dmrg_log_simple</scope><name>log_bond_dims</name></member>
      <member refid="classquantit_1_1dmrg__log__simple_1ac8407ec075b07fea474f2841f433126f" prot="private" virt="non-virtual"><scope>quantit::dmrg_log_simple</scope><name>log_bond_impl</name></member>
      <member refid="classquantit_1_1dmrg__default__logger_1a2ca8bec802551042f5faddd2096532b9" prot="public" virt="virtual"><scope>quantit::dmrg_log_simple</scope><name>log_energy</name></member>
      <member refid="classquantit_1_1dmrg__default__logger_1af639c233e813832f6054f8beb93cb4eb" prot="public" virt="virtual"><scope>quantit::dmrg_log_simple</scope><name>log_energy</name></member>
      <member refid="classquantit_1_1dmrg__log__simple_1a97a573fc095627c512c488942adcfca9" prot="public" virt="virtual"><scope>quantit::dmrg_log_simple</scope><name>log_step</name></member>
      <member refid="classquantit_1_1dmrg__log__simple_1aec05ac6076c1601f89539a80f89745af" prot="public" virt="non-virtual"><scope>quantit::dmrg_log_simple</scope><name>middle_bond_dim</name></member>
      <member refid="classquantit_1_1dmrg__logger_1a70fbd3728e580b0ca589bb090170b7f5" prot="public" virt="virtual"><scope>quantit::dmrg_log_simple</scope><name>~dmrg_logger</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
