<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="property_8h" kind="file" language="C++">
    <compoundname>property.h</compoundname>
    <includes local="no">type_traits</includes>
    <includes local="no">utility</includes>
    <includedby refid="btensor_8h" local="yes">/home/alex/project/quantt/include/blockTensor/btensor.h</includedby>
    <includedby refid="MPT_8h" local="yes">/home/alex/project/quantt/include/MPT.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/alex/project/quantt/include/property.h</label>
        <link refid="property_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>utility</label>
      </node>
      <node id="2">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>/home/alex/project/quantt/include/dmrg.h</label>
        <link refid="dmrg_8h_source"/>
      </node>
      <node id="1">
        <label>/home/alex/project/quantt/include/property.h</label>
        <link refid="property_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/alex/project/quantt/include/operators.h</label>
        <link refid="operators_8h_source"/>
      </node>
      <node id="6">
        <label>/home/alex/project/quantt/include/MPT.h</label>
        <link refid="MPT_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/alex/project/quantt/include/blockTensor/LinearAlgebra.h</label>
        <link refid="blockTensor_2LinearAlgebra_8h_source"/>
      </node>
      <node id="2">
        <label>/home/alex/project/quantt/include/blockTensor/btensor.h</label>
        <link refid="btensor_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/alex/project/quantt/include/models.h</label>
        <link refid="models_8h_source"/>
      </node>
      <node id="4">
        <label>/home/alex/project/quantt/include/dmrg_logger.h</label>
        <link refid="dmrg__logger_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classproperty" prot="public">property</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/>property.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Project:<sp/>QuantiT</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>File<sp/>Created:<sp/>Thursday,<sp/>23rd<sp/>July<sp/>2020<sp/>11:30:55<sp/>am</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Alexandre<sp/>Foley<sp/>(Alexandre.foley@usherbrooke.ca)</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>-----</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Last<sp/>Modified:<sp/>Thursday,<sp/>23rd<sp/>July<sp/>2020<sp/>11:30:55<sp/>am</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Modified<sp/>By:<sp/>Alexandre<sp/>Foley<sp/>(Alexandre.foley@usherbrooke.ca&gt;)</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>-----</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020<sp/>Alexandre<sp/>Foley</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>GPL<sp/>v3</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>A0DBDDD7_5F5B_48D3_A287_E11E64C8B84C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>A0DBDDD7_5F5B_48D3_A287_E11E64C8B84C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>c++20,<sp/>we<sp/>can<sp/>use<sp/>unique_type<sp/>=<sp/>decltype([]{}),<sp/>to<sp/>get<sp/>a<sp/>completly<sp/>unique<sp/>type,<sp/>even<sp/>if<sp/>all<sp/>the<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>template<sp/>argument<sp/>are<sp/>identical.<sp/>Doing<sp/>that<sp/>mean<sp/>that<sp/>every<sp/>time<sp/>the<sp/>template<sp/>is<sp/>explicitly<sp/>written,<sp/>a<sp/>new<sp/>type<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>generated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classproperty" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>content,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>owner,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>cref_type<sp/>=<sp/>const<sp/>content<sp/>&amp;,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>unique_type<sp/>=<sp/>owner&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classproperty" kindref="compound">property</ref><sp/>final</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@cond</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>owner;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@endcond</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>content<sp/>value;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classproperty" kindref="compound">property</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classproperty" kindref="compound">property</ref>(cref_type<sp/>val)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>value(val)<sp/>{}<sp/></highlight><highlight class="comment">//<sp/>private<sp/>constructor,<sp/>allows<sp/>owning<sp/>class<sp/>to<sp/>construct<sp/>without<sp/>check<sp/>if<sp/>wanted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args,</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">E<sp/>=<sp/>std::enable_if_t&lt;std::is_constructible_v&lt;content,<sp/>Args...&gt;&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classproperty" kindref="compound">property</ref>(Args...<sp/>args):value(std::forward&lt;Args&gt;(args)...)<sp/>{}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classproperty" kindref="compound">property</ref>(content<sp/>&amp;&amp;val)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>value(std::move(val))<sp/>{}<sp/></highlight><highlight class="comment">//<sp/>private<sp/>constructor,<sp/>allows<sp/>owning<sp/>class<sp/>to<sp/>construct<sp/>without<sp/>check<sp/>if<sp/>wanted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>basically,<sp/>the<sp/>only<sp/>thing<sp/>to<sp/>do<sp/>with<sp/>this<sp/>for<sp/>non-friend<sp/>is<sp/>to<sp/>look<sp/>at<sp/>or<sp/>copy<sp/>the<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classproperty" kindref="compound">property</ref>(<ref refid="classproperty" kindref="compound">property</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classproperty" kindref="compound">property</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classproperty" kindref="compound">property</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classproperty" kindref="compound">property</ref><sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classproperty" kindref="compound">property</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classproperty" kindref="compound">property</ref><sp/>&amp;operator=(<ref refid="classproperty" kindref="compound">property</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>redefine<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>cref_type()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;<sp/>}<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classproperty_1adb58f3ae45996edceb8fa1fcecd9b1bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classproperty" kindref="compound">property</ref><sp/>&amp;<ref refid="classproperty_1adb58f3ae45996edceb8fa1fcecd9b1bc" kindref="member">operator=</ref>(cref_type<sp/>new_value);</highlight></codeline>
<codeline lineno="71" refid="classproperty_1aed01b27239420a0c08a49d7df6f4c9f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classproperty" kindref="compound">property</ref><sp/>&amp;<ref refid="classproperty_1aed01b27239420a0c08a49d7df6f4c9f8" kindref="member">operator=</ref>(content<sp/>&amp;&amp;new_value);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classproperty_1a058c3e1632a91b77ada3d87b435ceea1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>content<sp/>*<ref refid="classproperty_1a058c3e1632a91b77ada3d87b435ceea1" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;value;<sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classproperty" kindref="compound">property</ref>(){};</highlight></codeline>
<codeline lineno="81"><highlight class="normal">};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__has_include(&lt;fmt/format.h&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fmt/format.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>content,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>owner,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>cref_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>unique_type&gt;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fmt::formatter&lt;property&lt;content,<sp/>owner,<sp/>cref_type,<sp/>unique_type&gt;&gt;<sp/>:<sp/>fmt::formatter&lt;content&gt;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>A0DBDDD7_5F5B_48D3_A287_E11E64C8B84C<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/alex/project/quantt/include/property.h"/>
  </compounddef>
</doxygen>
