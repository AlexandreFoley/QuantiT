<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classquantit_1_1dmrg__logger" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>quantit::dmrg_logger</compoundname>
    <derivedcompoundref refid="classquantit_1_1dmrg__default__logger" prot="public" virt="non-virtual">quantit::dmrg_default_logger</derivedcompoundref>
    <includes refid="dmrg__logger_8h" local="no">dmrg_logger.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classquantit_1_1dmrg__logger_1aa78f23c04e3821c9ee4cd262ed170a05" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void quantit::dmrg_logger::log_step</definition>
        <argsstring>(size_t)=0</argsstring>
        <name>log_step</name>
        <qualifiedname>quantit::dmrg_logger::log_step</qualifiedname>
        <reimplementedby refid="classquantit_1_1dmrg__log__simple_1a97a573fc095627c512c488942adcfca9">log_step</reimplementedby>
        <reimplementedby refid="classquantit_1_1dmrg__log__sweeptime_1a88836501c6ee0b9efb9b0a655ece6fbb">log_step</reimplementedby>
        <reimplementedby refid="classquantit_1_1dmrg__default__logger_1ab2c8ffc1abbb4bd3380888d6a2f0b313">log_step</reimplementedby>
        <param>
          <type>size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" line="30" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__logger_1adf57a1768566ea3d8c1cc12bb02123c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void quantit::dmrg_logger::log_energy</definition>
        <argsstring>(const torch::Tensor &amp;)=0</argsstring>
        <name>log_energy</name>
        <qualifiedname>quantit::dmrg_logger::log_energy</qualifiedname>
        <reimplementedby refid="classquantit_1_1dmrg__default__logger_1a2ca8bec802551042f5faddd2096532b9">log_energy</reimplementedby>
        <reimplementedby refid="classquantit_1_1dmrg__log__sweeptime_1a389dab85289bd6b53c6b01a0e26e8ef5">log_energy</reimplementedby>
        <param>
          <type>const torch::Tensor &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" line="31" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__logger_1aa2cbfa33cfa1478cee7d00327c4d9bb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void quantit::dmrg_logger::log_energy</definition>
        <argsstring>(const btensor &amp;)=0</argsstring>
        <name>log_energy</name>
        <qualifiedname>quantit::dmrg_logger::log_energy</qualifiedname>
        <reimplementedby refid="classquantit_1_1dmrg__default__logger_1af639c233e813832f6054f8beb93cb4eb">log_energy</reimplementedby>
        <reimplementedby refid="classquantit_1_1dmrg__log__sweeptime_1a44db410afddac9861524d34e2e1e6be9">log_energy</reimplementedby>
        <param>
          <type>const <ref refid="classquantit_1_1btensor" kindref="compound">btensor</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" line="32" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__logger_1a983bec9428099710c6fe8bd79567df69" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void quantit::dmrg_logger::log_bond_dims</definition>
        <argsstring>(const MPS &amp;)=0</argsstring>
        <name>log_bond_dims</name>
        <qualifiedname>quantit::dmrg_logger::log_bond_dims</qualifiedname>
        <reimplementedby refid="classquantit_1_1dmrg__default__logger_1ac9216b600e0e625aae2f7ff8a27daa09">log_bond_dims</reimplementedby>
        <reimplementedby refid="classquantit_1_1dmrg__log__simple_1a0ab2fa53e8af659b4f142e264760da18">log_bond_dims</reimplementedby>
        <reimplementedby refid="classquantit_1_1dmrg__log__sweeptime_1a7be33057e9ecc6f9cdf557fe648189a4">log_bond_dims</reimplementedby>
        <param>
          <type>const <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" line="33" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__logger_1a88687e6fcca72a0ce6672f05d3f87ed4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void quantit::dmrg_logger::log_bond_dims</definition>
        <argsstring>(const bMPS &amp;)=0</argsstring>
        <name>log_bond_dims</name>
        <qualifiedname>quantit::dmrg_logger::log_bond_dims</qualifiedname>
        <reimplementedby refid="classquantit_1_1dmrg__default__logger_1a6ca24a9c43841bfa95e540ea01d42725">log_bond_dims</reimplementedby>
        <reimplementedby refid="classquantit_1_1dmrg__log__simple_1afff2dadf5090e7658c6d10a025717d57">log_bond_dims</reimplementedby>
        <reimplementedby refid="classquantit_1_1dmrg__log__sweeptime_1a3e2b8dfe6c30d628a9113228c02bd53d">log_bond_dims</reimplementedby>
        <param>
          <type>const <ref refid="classquantit_1_1bMPS" kindref="compound">bMPS</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" line="34" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__logger_1aefeab435b25cd1e822d53d0c01fcf7cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void quantit::dmrg_logger::init</definition>
        <argsstring>(const dmrg_options &amp;)</argsstring>
        <name>init</name>
        <qualifiedname>quantit::dmrg_logger::init</qualifiedname>
        <reimplementedby refid="classquantit_1_1dmrg__log__sweeptime_1a2d27e6b93bbca9fe40b1bc309268b341">init</reimplementedby>
        <param>
          <type>const <ref refid="structquantit_1_1dmrg__options" kindref="compound">dmrg_options</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" line="36" column="14" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__logger_1aec679b092519a3b96ca9d4df7b388af5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void quantit::dmrg_logger::it_log_all</definition>
        <argsstring>(size_t step_num, const torch::Tensor &amp;E, const MPS &amp;state)</argsstring>
        <name>it_log_all</name>
        <qualifiedname>quantit::dmrg_logger::it_log_all</qualifiedname>
        <reimplementedby refid="classquantit_1_1dmrg__log__sweeptime_1acf8dafd8065d0417a90a1d55dad06745">it_log_all</reimplementedby>
        <reimplementedby refid="classquantit_1_1dmrg__log__simple_1a474aeafcac00435f639aa70211feed3d">it_log_all</reimplementedby>
        <param>
          <type>size_t</type>
          <declname>step_num</declname>
        </param>
        <param>
          <type>const torch::Tensor &amp;</type>
          <declname>E</declname>
        </param>
        <param>
          <type>const <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Logs the energy and the state of the <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> during the dmrg iterations.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>step_num</parametername>
</parameternamelist>
<parameterdescription>
<para>the current step number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>the energy of the state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> state at the current step. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" line="45" column="14" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__logger_1ae174380571b94f642328d02b1ef0e997" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void quantit::dmrg_logger::it_log_all</definition>
        <argsstring>(size_t step_num, const btensor &amp;E, const bMPS &amp;state)</argsstring>
        <name>it_log_all</name>
        <qualifiedname>quantit::dmrg_logger::it_log_all</qualifiedname>
        <reimplementedby refid="classquantit_1_1dmrg__log__sweeptime_1a94e0c72a29ed2bcc51d2066eb41f4d0d">it_log_all</reimplementedby>
        <reimplementedby refid="classquantit_1_1dmrg__log__simple_1adc0139d3f688086acdac169e0af2df8b">it_log_all</reimplementedby>
        <param>
          <type>size_t</type>
          <declname>step_num</declname>
        </param>
        <param>
          <type>const <ref refid="classquantit_1_1btensor" kindref="compound">btensor</ref> &amp;</type>
          <declname>E</declname>
        </param>
        <param>
          <type>const <ref refid="classquantit_1_1bMPS" kindref="compound">bMPS</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Logs the energy and the state of the <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> during the dmrg iterations.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>step_num</parametername>
</parameternamelist>
<parameterdescription>
<para>the current step number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>the energy of the state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> state at the current step. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" line="53" column="14" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__logger_1a40e35a635a42df1666b452aaaeba3c22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void quantit::dmrg_logger::end_log_all</definition>
        <argsstring>(size_t step_num, const torch::Tensor &amp;E, const MPS &amp;state)</argsstring>
        <name>end_log_all</name>
        <qualifiedname>quantit::dmrg_logger::end_log_all</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>step_num</declname>
        </param>
        <param>
          <type>const torch::Tensor &amp;</type>
          <declname>E</declname>
        </param>
        <param>
          <type>const <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Logs the energy and the state of the <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> when the DMRG procedure is done.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>step_num</parametername>
</parameternamelist>
<parameterdescription>
<para>the current step number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>the energy of the state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> state at the end of the step. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" line="61" column="14" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__logger_1aefe31347ea89511837801ca25bce9c3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void quantit::dmrg_logger::end_log_all</definition>
        <argsstring>(size_t step_num, const btensor &amp;E, const bMPS &amp;state)</argsstring>
        <name>end_log_all</name>
        <qualifiedname>quantit::dmrg_logger::end_log_all</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>step_num</declname>
        </param>
        <param>
          <type>const <ref refid="classquantit_1_1btensor" kindref="compound">btensor</ref> &amp;</type>
          <declname>E</declname>
        </param>
        <param>
          <type>const <ref refid="classquantit_1_1bMPS" kindref="compound">bMPS</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Logs the energy and the state of the <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> when the DMRG procedure is done.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>step_num</parametername>
</parameternamelist>
<parameterdescription>
<para>the current step number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>the energy of the state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> state at the end of the step. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" line="69" column="14" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__logger_1a9f638588362a5b58350f5cbbec1b417e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void quantit::dmrg_logger::log_all</definition>
        <argsstring>(size_t step_num, const torch::Tensor &amp;E, const MPS &amp;state)</argsstring>
        <name>log_all</name>
        <qualifiedname>quantit::dmrg_logger::log_all</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>step_num</declname>
        </param>
        <param>
          <type>const torch::Tensor &amp;</type>
          <declname>E</declname>
        </param>
        <param>
          <type>const <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Log the current step number, the current energy, and the bond dimensions of the <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>step_num</parametername>
</parameternamelist>
<parameterdescription>
<para>the current step number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>the energy of the state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> state to log. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" line="78" column="14" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" bodystart="78" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__logger_1ac04464f362a6f8e37b38696ccbcf067a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void quantit::dmrg_logger::log_all</definition>
        <argsstring>(size_t step_num, const btensor &amp;E, const bMPS &amp;state)</argsstring>
        <name>log_all</name>
        <qualifiedname>quantit::dmrg_logger::log_all</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>step_num</declname>
        </param>
        <param>
          <type>const <ref refid="classquantit_1_1btensor" kindref="compound">btensor</ref> &amp;</type>
          <declname>E</declname>
        </param>
        <param>
          <type>const <ref refid="classquantit_1_1bMPS" kindref="compound">bMPS</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Log the current step number, the current energy, and the bond dimensions of the <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>step_num</parametername>
</parameternamelist>
<parameterdescription>
<para>the current step number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>the energy of the state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classquantit_1_1MPS" kindref="compound">MPS</ref> state to log. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" line="91" column="14" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" bodystart="91" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classquantit_1_1dmrg__logger_1a70fbd3728e580b0ca589bb090170b7f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual quantit::dmrg_logger::~dmrg_logger</definition>
        <argsstring>()</argsstring>
        <name>~dmrg_logger</name>
        <qualifiedname>quantit::dmrg_logger::~dmrg_logger</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" line="98" column="9" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" bodystart="98" bodyend="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Pure virtual base class for logging the state of dmrg. This logger is meant to do macro scale logging: as such it isn&apos;t perfomance critical and we can afford the virtual calls. dmrg call init before the first sweep, it_log_all at every iterations and call end_log_all once when the state is converged. the last call to it_log_all receive the same arguments as end_log_all (it&apos;s not useful to have both function do something if it_log_all does something at every iterations). </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>quantit::dmrg_default_logger</label>
        <link refid="classquantit_1_1dmrg__default__logger"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>quantit::dmrg_log_simple</label>
        <link refid="classquantit_1_1dmrg__log__simple"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>quantit::dmrg_log_sweeptime</label>
        <link refid="classquantit_1_1dmrg__log__sweeptime"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>quantit::dmrg_logger</label>
        <link refid="classquantit_1_1dmrg__logger"/>
      </node>
    </inheritancegraph>
    <location file="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" line="27" column="1" bodyfile="/Users/alex/Documents/Prog/QuantiT/include/dmrg_logger.h" bodystart="28" bodyend="99"/>
    <listofallmembers>
      <member refid="classquantit_1_1dmrg__logger_1a40e35a635a42df1666b452aaaeba3c22" prot="public" virt="virtual"><scope>quantit::dmrg_logger</scope><name>end_log_all</name></member>
      <member refid="classquantit_1_1dmrg__logger_1aefe31347ea89511837801ca25bce9c3a" prot="public" virt="virtual"><scope>quantit::dmrg_logger</scope><name>end_log_all</name></member>
      <member refid="classquantit_1_1dmrg__logger_1aefeab435b25cd1e822d53d0c01fcf7cc" prot="public" virt="virtual"><scope>quantit::dmrg_logger</scope><name>init</name></member>
      <member refid="classquantit_1_1dmrg__logger_1aec679b092519a3b96ca9d4df7b388af5" prot="public" virt="virtual"><scope>quantit::dmrg_logger</scope><name>it_log_all</name></member>
      <member refid="classquantit_1_1dmrg__logger_1ae174380571b94f642328d02b1ef0e997" prot="public" virt="virtual"><scope>quantit::dmrg_logger</scope><name>it_log_all</name></member>
      <member refid="classquantit_1_1dmrg__logger_1a9f638588362a5b58350f5cbbec1b417e" prot="public" virt="virtual"><scope>quantit::dmrg_logger</scope><name>log_all</name></member>
      <member refid="classquantit_1_1dmrg__logger_1ac04464f362a6f8e37b38696ccbcf067a" prot="public" virt="virtual"><scope>quantit::dmrg_logger</scope><name>log_all</name></member>
      <member refid="classquantit_1_1dmrg__logger_1a983bec9428099710c6fe8bd79567df69" prot="public" virt="pure-virtual"><scope>quantit::dmrg_logger</scope><name>log_bond_dims</name></member>
      <member refid="classquantit_1_1dmrg__logger_1a88687e6fcca72a0ce6672f05d3f87ed4" prot="public" virt="pure-virtual"><scope>quantit::dmrg_logger</scope><name>log_bond_dims</name></member>
      <member refid="classquantit_1_1dmrg__logger_1adf57a1768566ea3d8c1cc12bb02123c7" prot="public" virt="pure-virtual"><scope>quantit::dmrg_logger</scope><name>log_energy</name></member>
      <member refid="classquantit_1_1dmrg__logger_1aa2cbfa33cfa1478cee7d00327c4d9bb9" prot="public" virt="pure-virtual"><scope>quantit::dmrg_logger</scope><name>log_energy</name></member>
      <member refid="classquantit_1_1dmrg__logger_1aa78f23c04e3821c9ee4cd262ed170a05" prot="public" virt="pure-virtual"><scope>quantit::dmrg_logger</scope><name>log_step</name></member>
      <member refid="classquantit_1_1dmrg__logger_1a70fbd3728e580b0ca589bb090170b7f5" prot="public" virt="virtual"><scope>quantit::dmrg_logger</scope><name>~dmrg_logger</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
